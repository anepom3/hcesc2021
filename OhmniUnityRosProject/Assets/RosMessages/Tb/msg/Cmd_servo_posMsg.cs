//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Tb
{
    [Serializable]
    public class Cmd_servo_posMsg : Message
    {
        public const string k_RosMessageName = "tb_msgs/cmd_servo_pos";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        public bool use_rad;
        public double pos_rad;
        public ushort pos_raw;
        public byte playtime;

        public Cmd_servo_posMsg()
        {
            this.header = new HeaderMsg();
            this.use_rad = false;
            this.pos_rad = 0.0;
            this.pos_raw = 0;
            this.playtime = 0;
        }

        public Cmd_servo_posMsg(HeaderMsg header, bool use_rad, double pos_rad, ushort pos_raw, byte playtime)
        {
            this.header = header;
            this.use_rad = use_rad;
            this.pos_rad = pos_rad;
            this.pos_raw = pos_raw;
            this.playtime = playtime;
        }

        public static Cmd_servo_posMsg Deserialize(MessageDeserializer deserializer) => new Cmd_servo_posMsg(deserializer);

        private Cmd_servo_posMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.use_rad);
            deserializer.Read(out this.pos_rad);
            deserializer.Read(out this.pos_raw);
            deserializer.Read(out this.playtime);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.use_rad);
            serializer.Write(this.pos_rad);
            serializer.Write(this.pos_raw);
            serializer.Write(this.playtime);
        }

        public override string ToString()
        {
            return "Cmd_servo_posMsg: " +
            "\nheader: " + header.ToString() +
            "\nuse_rad: " + use_rad.ToString() +
            "\npos_rad: " + pos_rad.ToString() +
            "\npos_raw: " + pos_raw.ToString() +
            "\nplaytime: " + playtime.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
