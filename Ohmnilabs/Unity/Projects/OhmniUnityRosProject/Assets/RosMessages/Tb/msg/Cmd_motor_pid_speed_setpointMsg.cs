//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Tb
{
    [Serializable]
    public class Cmd_motor_pid_speed_setpointMsg : Message
    {
        public const string k_RosMessageName = "tb_msgs/cmd_motor_pid_speed_setpoint";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        // Set setpoint value for each motor from -200 to 200
        //  motor_i_enable:
        //    true: set setpoint = motor_i value
        //    false: set setpoint = 0
        public bool motor_left_enable;
        public double motor_left;
        public bool motor_right_enable;
        public double motor_right;

        public Cmd_motor_pid_speed_setpointMsg()
        {
            this.header = new HeaderMsg();
            this.motor_left_enable = false;
            this.motor_left = 0.0;
            this.motor_right_enable = false;
            this.motor_right = 0.0;
        }

        public Cmd_motor_pid_speed_setpointMsg(HeaderMsg header, bool motor_left_enable, double motor_left, bool motor_right_enable, double motor_right)
        {
            this.header = header;
            this.motor_left_enable = motor_left_enable;
            this.motor_left = motor_left;
            this.motor_right_enable = motor_right_enable;
            this.motor_right = motor_right;
        }

        public static Cmd_motor_pid_speed_setpointMsg Deserialize(MessageDeserializer deserializer) => new Cmd_motor_pid_speed_setpointMsg(deserializer);

        private Cmd_motor_pid_speed_setpointMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.motor_left_enable);
            deserializer.Read(out this.motor_left);
            deserializer.Read(out this.motor_right_enable);
            deserializer.Read(out this.motor_right);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.motor_left_enable);
            serializer.Write(this.motor_left);
            serializer.Write(this.motor_right_enable);
            serializer.Write(this.motor_right);
        }

        public override string ToString()
        {
            return "Cmd_motor_pid_speed_setpointMsg: " +
            "\nheader: " + header.ToString() +
            "\nmotor_left_enable: " + motor_left_enable.ToString() +
            "\nmotor_left: " + motor_left.ToString() +
            "\nmotor_right_enable: " + motor_right_enable.ToString() +
            "\nmotor_right: " + motor_right.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
