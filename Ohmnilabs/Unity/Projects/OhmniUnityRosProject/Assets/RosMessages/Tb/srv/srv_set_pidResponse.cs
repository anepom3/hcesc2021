//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Tb
{
    [Serializable]
    public class srv_set_pidResponse : Message
    {
        public const string k_RosMessageName = "tb_msgs/srv_set_pid";
        public override string RosMessageName => k_RosMessageName;

        public long pid_id;
        public double p_value;
        public double i_value;
        public double d_value;
        public double setpoint;

        public srv_set_pidResponse()
        {
            this.pid_id = 0;
            this.p_value = 0.0;
            this.i_value = 0.0;
            this.d_value = 0.0;
            this.setpoint = 0.0;
        }

        public srv_set_pidResponse(long pid_id, double p_value, double i_value, double d_value, double setpoint)
        {
            this.pid_id = pid_id;
            this.p_value = p_value;
            this.i_value = i_value;
            this.d_value = d_value;
            this.setpoint = setpoint;
        }

        public static srv_set_pidResponse Deserialize(MessageDeserializer deserializer) => new srv_set_pidResponse(deserializer);

        private srv_set_pidResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.pid_id);
            deserializer.Read(out this.p_value);
            deserializer.Read(out this.i_value);
            deserializer.Read(out this.d_value);
            deserializer.Read(out this.setpoint);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.pid_id);
            serializer.Write(this.p_value);
            serializer.Write(this.i_value);
            serializer.Write(this.d_value);
            serializer.Write(this.setpoint);
        }

        public override string ToString()
        {
            return "srv_set_pidResponse: " +
            "\npid_id: " + pid_id.ToString() +
            "\np_value: " + p_value.ToString() +
            "\ni_value: " + i_value.ToString() +
            "\nd_value: " + d_value.ToString() +
            "\nsetpoint: " + setpoint.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
